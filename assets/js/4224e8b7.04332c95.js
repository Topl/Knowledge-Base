"use strict";(self.webpackChunkportal=self.webpackChunkportal||[]).push([[1002],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=s(n),u=i,f=d["".concat(p,".").concat(u)]||d[u]||m[u]||o;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=d;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a.mdxType="string"==typeof e?e:i,l[1]=a;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8232:(e,t,n)=>{n.d(t,{ZP:()=>l});var r=n(7462),i=(n(7294),n(3905));const o={toc:[]};function l(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"To initialize a wallet, you need to run the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",null,"brambl-cli wallet init -w $PASSWORD --passphrase $PASSPHRASE -n $NETWORK -o ",n.keyfile," --newwalletdb ",n.wallet," --mnemonicfile ",n.mnemonic)),(0,i.kt)("p",null,"This will create a new wallet with a new master key protected by a password and a passphrase. The wallet will be stored in the file specified by the ",(0,i.kt)("inlineCode",{parentName:"p"},"--newwalletdb")," option. The mnemonic will be stored in the file specified by the ",(0,i.kt)("inlineCode",{parentName:"p"},"--mnemonicfile")," option. The master key will be stored in the file specified by the ",(0,i.kt)("inlineCode",{parentName:"p"},"-o")," option. The valid values for the ",(0,i.kt)("inlineCode",{parentName:"p"},"-n")," option are ",(0,i.kt)("inlineCode",{parentName:"p"},"mainnet"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"testnet"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"private"),"."))}l.isMDXComponent=!0},93:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var r=n(7462),i=(n(7294),n(3905)),o=n(8232);const l={sidebar_position:1},a="Initialize a Wallet",p={unversionedId:"Developers/CLI/How-tos/initialize-wallet",id:"Developers/CLI/How-tos/initialize-wallet",title:"Initialize a Wallet",description:"",source:"@site/docs/Developers/04-CLI/03-How-tos/initialize-wallet.md",sourceDirName:"Developers/04-CLI/03-How-tos",slug:"/Developers/CLI/How-tos/initialize-wallet",permalink:"/Developers/CLI/How-tos/initialize-wallet",draft:!1,editUrl:"https://github.com/Topl/knowledge-base/edit/main/docs/Developers/04-CLI/03-How-tos/initialize-wallet.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"developersSidebar",previous:{title:"How Tos",permalink:"/category/how-tos"},next:{title:"Recover a Wallet Keyfile",permalink:"/Developers/CLI/How-tos/recover-wallet"}},s={},c=[],m={toc:c};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"initialize-a-wallet"},"Initialize a Wallet"),(0,i.kt)(o.ZP,{wallet:"$WALLET_DB",keyfile:"$KEY_FILE",mnemonic:"$MNEMONIC_FILE",mdxType:"InitializeWallet"}))}d.isMDXComponent=!0}}]);