"use strict";(self.webpackChunkportal=self.webpackChunkportal||[]).push([[6617],{4844:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(4848),a=n(8453);const i={sidebar_position:3},o="Creating Transactions",s={id:"Developers/Quickstart Tutorial/create-tx",title:"Creating Transactions",description:"In this tutorial we are creating a transaction using the brambl-cli and",source:"@site/docs/Developers/02-Quickstart Tutorial/create-tx.md",sourceDirName:"Developers/02-Quickstart Tutorial",slug:"/Developers/Quickstart Tutorial/create-tx",permalink:"/Developers/Quickstart Tutorial/create-tx",draft:!1,unlisted:!1,editUrl:"https://github.com/Topl/knowledge-base/edit/main/docs/Developers/02-Quickstart Tutorial/create-tx.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"developersSidebar",previous:{title:"Funding Your Wallet",permalink:"/Developers/Quickstart Tutorial/fund-wallet"},next:{title:"Minting an Asset",permalink:"/Developers/Quickstart Tutorial/mint-asset"}},l={},c=[{value:"Create an LVL transaction",id:"create-an-lvl-transaction",level:2},{value:"Prove the Transaction",id:"prove-the-transaction",level:2},{value:"Send the Transaction to the Network",id:"send-the-transaction-to-the-network",level:2},{value:"Check the Balance",id:"check-the-balance",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"creating-transactions",children:"Creating Transactions"}),"\n",(0,r.jsx)(t.p,{children:"In this tutorial we are creating a transaction using the brambl-cli and\nsending it to the network."}),"\n",(0,r.jsx)(t.p,{children:"The process of creating a transaction is the following:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"First, we need to create the actual transaction."}),"\n",(0,r.jsx)(t.li,{children:"Then, we need to prove the transaction."}),"\n",(0,r.jsx)(t.li,{children:"Finally, we need to send the transaction to the network."}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"create-an-lvl-transaction",children:"Create an LVL transaction"}),"\n",(0,r.jsx)(t.p,{children:"To create a simple transaction you need to run the following command:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"brambl-cli simple-transaction create --from-fellowship $FELLOWSHIP --from-template $LOCK_TEMPLATE --from-interaction $INTERACTION_NR -t $TO_ADDRESS -w $PASSWORD --port $PORT -o $TX_FILE -n $NETWORK -a $SEND_AMOUNT -h $HOST -i $MAIN_KEY --walletdb $WALLET --fee $FEE --transfer-token $TOKEN_TYPE\n"})}),"\n",(0,r.jsxs)(t.p,{children:["This will create a transaction that spends the interaction ",(0,r.jsx)(t.code,{children:"$INTERACTION_NR"})," of the template ",(0,r.jsx)(t.code,{children:"$LOCK_TEMPLATE"})," of the fellowship ",(0,r.jsx)(t.code,{children:"$FELLOWSHIP"})," and sends ",(0,r.jsx)(t.code,{children:"$SEND_AMOUNT"})," polys to the address ",(0,r.jsx)(t.code,{children:"$TO_ADDRESS"}),". The transaction will be stored in the file ",(0,r.jsx)(t.code,{children:"$TX_FILE"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"--from-interaction"})," parameter is only required if the fellowship is ",(0,r.jsx)(t.code,{children:"nofellowship"}),". If the fellowship is ",(0,r.jsx)(t.code,{children:"self"}),", or any template where there is at least one fellowship, then the ",(0,r.jsx)(t.code,{children:"--from-interaction"})," parameter is not required."]}),"\n",(0,r.jsx)(t.h2,{id:"prove-the-transaction",children:"Prove the Transaction"}),"\n",(0,r.jsx)(t.p,{children:"To prove the transaction run the following command:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"brambl-cli tx prove -w $PASSWORD --keyfile $MAIN_KEY -n $NETWORK -i $TX_FILE -o $TX_PROVED_FILE --walletdb $WALLET\n"})}),"\n",(0,r.jsxs)(t.p,{children:["This will prove the transaction in the file ",(0,r.jsx)(t.code,{children:"$TX_FILE"})," and store the result in the file ",(0,r.jsx)(t.code,{children:"$TX_PROVED_FILE"}),". The right indexes to derive the keys are taken from the wallet database."]}),"\n",(0,r.jsx)(t.h2,{id:"send-the-transaction-to-the-network",children:"Send the Transaction to the Network"}),"\n",(0,r.jsx)(t.p,{children:"To send the transaction to the network you need to run the following command:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"brambl-cli tx broadcast -n $NETWORK -i $TX_PROVED_FILE -h $HOST --port $PORT --walletdb $WALLET\n"})}),"\n",(0,r.jsxs)(t.p,{children:["This will broadcast the transaction in the file ",(0,r.jsx)(t.code,{children:"$TX_PROVED_FILE"})," to the network."]}),"\n",(0,r.jsxs)(t.p,{children:["Do not forget to use the ",(0,r.jsx)(t.code,{children:"--secure"})," parameter if you are using the testnet."]}),"\n",(0,r.jsx)(t.h2,{id:"check-the-balance",children:"Check the Balance"}),"\n",(0,r.jsxs)(t.p,{children:["You can check the balance of the address ",(0,r.jsx)(t.code,{children:"$TO_ADDRESS"})," using the following command:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"brambl-cli wallet balance --from-address $TO_ADDRESS --walletdb $WALLET_DB --host $HOST --port $PORT\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Do not forget to use the ",(0,r.jsx)(t.code,{children:"--secure"})," parameter if you are using the testnet."]}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:["Find more information here! ",(0,r.jsx)(t.a,{href:"https://topl.github.io/brambl-cli/",children:"Brambl-cli Documentation"})]})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var r=n(6540);const a={},i=r.createContext(a);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);