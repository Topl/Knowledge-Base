"use strict";(self.webpackChunkportal=self.webpackChunkportal||[]).push([[9500],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(r),f=o,k=u["".concat(c,".").concat(f)]||u[f]||p[f]||a;return r?n.createElement(k,i(i({ref:t},d),{},{components:r})):n.createElement(k,i({ref:t},d))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1911:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const a={title:"Docker",slug:"docker",hidden:!1,createdAt:"2021-10-08T19:20:42.368Z",updatedAt:"2021-10-08T20:04:06.351Z"},i=void 0,l={unversionedId:"Developer/Getting Started/sdks-and-api-libraries/docker",id:"Developer/Getting Started/sdks-and-api-libraries/docker",title:"Docker",description:"Docker builds of bifrost are available on DockerHub",source:"@site/docs/Developer/Getting Started/sdks-and-api-libraries/docker.md",sourceDirName:"Developer/Getting Started/sdks-and-api-libraries",slug:"/Developer/Getting Started/sdks-and-api-libraries/docker",permalink:"/knowledge-base/docs/Developer/Getting Started/sdks-and-api-libraries/docker",draft:!1,editUrl:"https://github.com/Topl/knowledge-base/docs/Developer/Getting Started/sdks-and-api-libraries/docker.md",tags:[],version:"current",frontMatter:{title:"Docker",slug:"docker",hidden:!1,createdAt:"2021-10-08T19:20:42.368Z",updatedAt:"2021-10-08T20:04:06.351Z"},sidebar:"developerSidebar",previous:{title:"Introduction",permalink:"/knowledge-base/docs/Developer/Getting Started/introduction-2"},next:{title:"Installing Bifrost",permalink:"/knowledge-base/docs/Developer/Getting Started/sdks-and-api-libraries/installing-bifrost"}},c={},s=[{value:"Downloading the docker image",id:"downloading-the-docker-image",level:2},{value:"Running the Docker container for <code>bifrost</code>",id:"running-the-docker-container-for-bifrost",level:2}],d={toc:s};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Docker builds of ",(0,o.kt)("inlineCode",{parentName:"p"},"bifrost")," are available on ",(0,o.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/toplprotocol/bifrost/tags"},"DockerHub")),(0,o.kt)("h2",{id:"downloading-the-docker-image"},"Downloading the docker image"),(0,o.kt)("p",null,"To get the latest release of ",(0,o.kt)("inlineCode",{parentName:"p"},"bifrost"),", run:\n",(0,o.kt)("inlineCode",{parentName:"p"},"docker pull toplprotocol/bifrost:{{versionId}}")),(0,o.kt)("h2",{id:"running-the-docker-container-for-bifrost"},"Running the Docker container for ",(0,o.kt)("inlineCode",{parentName:"h2"},"bifrost")),(0,o.kt)("p",null,"To get a list of the basic CLI arguments, use "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"docker run --rm toplprotocol/bifrost:{{versionId}} java -jar bifrost-1.8.0.jar --help\n")),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"doc:running-bifrost"},"Running Bifrost")," for full documentation of the CLI arguments."),(0,o.kt)("p",null,"Running a ",(0,o.kt)("inlineCode",{parentName:"p"},"bifrost")," node requires a config file (you can either use one of the default configurations or provide your own). "),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create your network config or use one of the default network configs provided ",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"- If you choose to create your own network config, remember to add your network config onto the Docker host\n")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"mkdir $HOME/state-docker\n")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"     - After creating this directory, create your config file within it (optional) \n 2.) Run the `bifrost` server : \n")),(0,o.kt)("p",null,'docker run \\\n-p 9084:9084 -p 9085:9085 \\\n--volume $HOME/state-docker:/data \\\n--rm \\\ntoplprotocol/bifrost \\\njava -jar bifrost-1.8.0.jar \\\n-- config /data/my-config.conf \\\n-- seed "test"\n-- apiKeyHash "e4d2a343f3dcf9330ad9035b3e8d168e6728904262f2c434a4f8f934ec7b676"'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\nExplanation of the arguments: \n* `-p 9084:9084 -p 9085:9085` - exposes the API server port from the container to the docker host as well as the JSON-RPC server port.\n\n* `--volume $HOME/state-docker:/data` - mounts the\n     `~/state-docker` directory on the Docker host to `/data` inside\n     the container.\n\n*  ```--config /data/my-config.conf``` - use the config within the data volume for your custom network configuration\n\n3.) Wait for the message `Listening on 0.0.0.0:9085` to be shown (it may take some small amount of time for Bifrost to create the necessary genesis blocks) \n\n## Inspecting the contents of the Docker image\nIf you need to run a shell inside the Docker image, use the bash shell as the entrypoint: \n")),(0,o.kt)("p",null,"docker run --rm -it --entrypoint bash toplprotocol/bifrost:{{latest-version-id}}"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"")))}p.isMDXComponent=!0}}]);