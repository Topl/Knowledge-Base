"use strict";(self.webpackChunkportal=self.webpackChunkportal||[]).push([[3978],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=l,k=d["".concat(i,".").concat(m)]||d[m]||c[m]||r;return n?a.createElement(k,s(s({ref:t},p),{},{components:n})):a.createElement(k,s({ref:t},p))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,s=new Array(r);s[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:l,s[1]=o;for(var u=2;u<r;u++)s[u]=n[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8844:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var a=n(7462),l=(n(7294),n(3905));const r={id:"install-k8s",title:"Run with Helm/Kubernetes",tags:["Install","Getting started","sdkman","scala","jar"]},s=void 0,o={unversionedId:"Developers/Node Setup/install-k8s",id:"Developers/Node Setup/install-k8s",title:"Run with Helm/Kubernetes",description:"Quickstart",source:"@site/docs/Developers/03-Node Setup/helm-kubernetes.md",sourceDirName:"Developers/03-Node Setup",slug:"/Developers/Node Setup/install-k8s",permalink:"/Developers/Node Setup/install-k8s",draft:!1,editUrl:"https://github.com/Topl/knowledge-base/edit/main/docs/Developers/03-Node Setup/helm-kubernetes.md",tags:[{label:"Install",permalink:"/tags/install"},{label:"Getting started",permalink:"/tags/getting-started"},{label:"sdkman",permalink:"/tags/sdkman"},{label:"scala",permalink:"/tags/scala"},{label:"jar",permalink:"/tags/jar"}],version:"current",frontMatter:{id:"install-k8s",title:"Run with Helm/Kubernetes",tags:["Install","Getting started","sdkman","scala","jar"]},sidebar:"developersSidebar",previous:{title:"Run with Docker",permalink:"/Developers/Node Setup/install-docker"},next:{title:"Getting Started",permalink:"/Developers/CLI/brambl-cli-intro"}},i={},u=[{value:"Quickstart",id:"quickstart",level:2},{value:"Tools needed:",id:"tools-needed",level:3},{value:"Install K8s cluster",id:"install-k8s-cluster",level:2},{value:"Ubuntu",id:"ubuntu",level:3},{value:"Enable add ons",id:"enable-add-ons",level:4},{value:"Windows",id:"windows",level:3}],p={toc:u};function c(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"quickstart"},"Quickstart"),(0,l.kt)("h3",{id:"tools-needed"},"Tools needed:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Docker"),(0,l.kt)("li",{parentName:"ul"},"Kubernetes"),(0,l.kt)("li",{parentName:"ul"},"Helm")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"values.yaml","values.yaml":!0},"args: ['--dataDir', '/mnt/bifrost/data', '--stakingDir', '/mnt/bifrost/staking']\n\nvolume:\n  mountDirectory: /mnt/bifrost\n\nhelm repo add topl https://topl.github.io/helm-charts\nhelm repo update\nhelm upgrade --install bifrost topl/bifrost -n bifrost --create-namespace -f ./values.yaml\n")),(0,l.kt)("h2",{id:"install-k8s-cluster"},"Install K8s cluster"),(0,l.kt)("h3",{id:"ubuntu"},"Ubuntu"),(0,l.kt)("p",null,"In this example, we will use microk8s. There are many others you can use, including Docker Desktop + K8s, Minikube, k3s, Kind, etc. "),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://microk8s.io/docs/getting-started"},"https://microk8s.io/docs/getting-started")," "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"sudo snap install microk8s --classic\n# Add user to group\nsudo usermod -a -G microk8s $USER\nsudo chown -f -R $USER ~/.kube\n")),(0,l.kt)("h4",{id:"enable-add-ons"},"Enable add ons"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"microk8s enable dns hostpath-storage\n")),(0,l.kt)("h3",{id:"windows"},"Windows"),(0,l.kt)("p",null,"Follow Docker Desktop installation instructions: \u200b ",(0,l.kt)("a",{parentName:"p",href:"https://www.docker.com/products/docker-desktop/"},"https://www.docker.com/products/docker-desktop/"),"\nI recommend using the WSL2 backend. Instructions are here: \u200b",(0,l.kt)("a",{parentName:"p",href:"https://docs.docker.com/desktop/windows/wsl/"},"https://docs.docker.com/desktop/windows/wsl/")," "),(0,l.kt)("p",null,"Once Docker Desktop is installed, k8s is as easy as clicking a button"),(0,l.kt)("p",null,"Add an Alias"),(0,l.kt)("p",null,"You may also want to create an alias so you don\u2019t have to type microk8s kubectl every time. A common way would be do "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"vim ~/.bash_aliases\n")),(0,l.kt)("p",null,"Add this line"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'alias k="microk8s kubectl"\nalias helm="microk8s helm"\n')),(0,l.kt)("p",null,"Reload the shell, and then you can run commands like"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"k get pods\n")),(0,l.kt)("p",null,"The rest of the guide assumes an alias. If you didn\u2019t add one, use the kubectl , microk8s kubectl, minikube kubectl, etc."),(0,l.kt)("p",null,"Install Helm Chart"),(0,l.kt)("p",null,"Add the Apparatus Helm repository"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"helm repo add topl https://topl.github.io/helm-charts\nhelm repo update\n")),(0,l.kt)("p",null,"Install the Bifrost helm chart"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"helm upgrade --install bifrost topl/bifrost -n bifrost --create-namespace\n")),(0,l.kt)("p",null,"You can pass values to the chart either by passing a values.yaml file, or individual values via the --set flag."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"helm upgrade --install bifrost topl/bifrost -n bifrost --create-namespace -f ./path/to/values.yaml\nhelm upgrade --install bifrost topl/bifrost --set volume.mountDirectory='/mnt/bifrost' -n bifrost --create-namespace\n")),(0,l.kt)("p",null,"Finally, check the pod to make sure it is running."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"k get pods -n bifrost\n\n# To get more detailed info if the pod did not start, run\nk describe pods -n bifrost\n")),(0,l.kt)("p",null,"You can view the logs by running:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"k logs statefulset/bifrost -n bifrost\n\n# Or individual pods:\nk logs bifrost-0 -n bifrost\n")))}c.isMDXComponent=!0}}]);