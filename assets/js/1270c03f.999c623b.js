"use strict";(self.webpackChunkportal=self.webpackChunkportal||[]).push([[3724],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),h=l(n),u=a,f=h["".concat(c,".").concat(u)]||h[u]||p[u]||r;return n?o.createElement(f,i(i({ref:t},d),{},{components:n})):o.createElement(f,i({ref:t},d))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<r;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},4625:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var o=n(7462),a=(n(7294),n(3905));const r={title:"Transactions",slug:"transactions-1",hidden:!1,createdAt:"2021-08-11T21:05:58.590Z",updatedAt:"2021-08-11T21:05:58.590Z"},i=void 0,s={unversionedId:"Developer/New To Topl/transactions-1",id:"Developer/New To Topl/transactions-1",title:"Transactions",description:"Introduction",source:"@site/docs/Developer/New To Topl/transactions-1.md",sourceDirName:"Developer/New To Topl",slug:"/Developer/New To Topl/transactions-1",permalink:"/Developer/New To Topl/transactions-1",draft:!1,editUrl:"https://github.com/Topl/knowledge-base/edit/main/docs/Developer/New To Topl/transactions-1.md",tags:[],version:"current",frontMatter:{title:"Transactions",slug:"transactions-1",hidden:!1,createdAt:"2021-08-11T21:05:58.590Z",updatedAt:"2021-08-11T21:05:58.590Z"},sidebar:"developerSidebar",previous:{title:"Signing",permalink:"/Developer/New To Topl/signing"},next:{title:"Recovery Phrases",permalink:"/Developer/New To Topl/wallet-cryptography-and-encoding"}},c={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Transaction Lifecycle",id:"transaction-lifecycle",level:2},{value:"Creating Transactions",id:"creating-transactions",level:2},{value:"Broadcasting Transactions to the Topl Network",id:"broadcasting-transactions-to-the-topl-network",level:2},{value:"Polling for Transactions on the Topl Network",id:"polling-for-transactions-on-the-topl-network",level:2}],d={toc:l};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"Transactions are the most important part of the Topl protocol. Everything else in Topl is designed to ensure that transactions can be created, propagated on the network, validated, and finally added to the global ledger of transactions (the blockchain). Transactions are data structures that encode the transfer of tokens between participants in the Topl system. Each transaction is a public entry in Topl's blockchain, the global bookkeeping ledger."),(0,a.kt)("p",null,"In this section, we will examine all the various forms of transactions, what they contain, how to create them, how they are verified, and how they become a permanent record of all transactions."),(0,a.kt)("h2",{id:"transaction-lifecycle"},"Transaction Lifecycle"),(0,a.kt)("p",null,"A transaction's lifecycle begins with the transaction's creation, also known as ",(0,a.kt)("em",{parentName:"p"},"origination.")," The transaction is then signed with one or more signatures indicating the authorization to spend the UTXOs referenced by the transaction. The transaction is then ",(0,a.kt)("em",{parentName:"p"},"broadcast")," on the Topl network, where each Bifrost node (participant) validates and propagates the transaction until it reaches every node in the network. Finally, the transaction is verified by a forging node, and included in a block of transactions that is recorded on the blockchain."),(0,a.kt)("p",null,"Once recorded on the blockchain and confirmed by sufficient subsequent blocks (confirmed), the transaction is a permanent part of the Topl ledger, and is accepted as valid by all participants. The UTXOs allocated to a new owner by the transaction can then be spent in a new transaction, extending the chain of ownership and beginning the lifecycle of a transaction again."),(0,a.kt)("h2",{id:"creating-transactions"},"Creating Transactions"),(0,a.kt)("p",null,"In some ways, it helps to think of a transaction in the same way as a paper check. Like a check, a transaction is an instrument that expresses the intent to transfer ownership of an asset and is not visible to the financial system until it is submitted for execution. Like a check, the originator of a transaction does not have to be the one signing the transaction."),(0,a.kt)("p",null,"Currently, transactions must be created online. But transactions can be created by anyone, they do not have to have the credentials for a particular address. For example, an accounts payable clerk might process payable checks for signature by the CEO. Similarly, an accounts payable clerk can create Topl transactions and then have the CEO apply digital signatures to make them valid. Whereas a check references a specific account as the source of the funds, a Topl transaction references specific boxes that have been generated by a prior transaction as its source, rather than a particular account."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://files.readme.io/b36ed30-Screen_Shot_2021-08-11_at_4.36.56_PM.png",alt:"origination"})),(0,a.kt)("p",null,"Once a transaction has been created, it is signed by the owner (or owners) of the source of the funds. If it is properly formed and signed, the signed transaction is now valid and contains all the information needed to execute the transfer of tokens. Finally, the valid transaction has to reach the Topl network so that it can be propagated until it reaches a forger for inclusion in the public ledger (the blockchain)"),(0,a.kt)("h2",{id:"broadcasting-transactions-to-the-topl-network"},"Broadcasting Transactions to the Topl Network"),(0,a.kt)("p",null,'First, a transaction needs to be delivered to the Topl network in order to propagate and be included in the blockchain. Essentially, a Topl transaction consists of only a few bytes of data and must reach any one of the many Bifrost nodes. Senders do not need to trust the specific nodes they use to broadcast the transaction, as long as they use multiple nodes to ensure its propagation. The nodes do not need to trust the sender or establish the sender\'s "identity". Since the transaction is signed and contains no confidential information, private keys, or credentials, it can be publicly broadcast using the JSON-RPC routes. Unlike credit card transactions, which involve sensitive information and require transmission over encrypted networks, a Topl transaction can be sent over any network. As long as the transaction can reach a Topl node that will propagate it into the Topl network, the method of transport to the first node is not important.'),(0,a.kt)("p",null,"Topl transactions can therefore be transmitted to the Topl network over insecure networks like WiFi. As an extreme example, a Topl transaction could even be encoded in smileys (emoticons) and posted in a public forum or sent as a text message or Skype chat message."),(0,a.kt)("h2",{id:"polling-for-transactions-on-the-topl-network"},"Polling for Transactions on the Topl Network"),(0,a.kt)("p",null,"Once a Topl transaction is sent to any node connected to the Topl network, the transaction will be validated by that node. If valid, that node will propagate it to the other nodes to which it is connected. If the transaction is invalid, the node will reject it and remove the transaction from the queue of transactions (mempool)."),(0,a.kt)("p",null,"The Topl network is a peer-to-peer network, meaning that each Bifrost node is connected to a few other Bifrost nodes that it discovers during startup through the peer-to-peer protocol. The entire network forms a loosely connected mesh without a fixed topology or any other structure, making all nodes equal peers. Messages, including transactions and blocks, are propagated from each node to the peers to which it is connected. A new validated transaction injected into any node on the network will be sent to three or four of the neighboring nodes, each of which will send it to three to four more nodes, and so on. In this way, within a few seconds a valid transaction will propagate in an exponentially expanding ripple across the network until all connected nodes have received it."),(0,a.kt)("p",null,"The Topl network is designed to propagate transactions and blocks to all nodes in an efficient and resilient manner that is resistant to attacks. To prevent spamming, denial of service attacks, or other nuisance attacks against the Topl network, every node independently validates every transaction before propagating it further. A malformed transaction will not get beyond one node."),(0,a.kt)("p",null,"Due to this setup, the originator should poll the mempool periodically. Once a transaction has left the mempool, it could either be because it was incorporated into a new block, or because it was malformed. Thus, after getting an unsuccessful hit from the mempool, the originator should then query the blockchain itself to see if the transaction was incorporated into a block. Only after getting a successful response from the blockchain should they proceed to using any UTXOs that were generated as a result of the transaction. This can be seen in the flow diagram below:"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://files.readme.io/3b69254-Screen_Shot_2021-08-11_at_5.02.53_PM.png",alt:"broadcast transaction"})))}p.isMDXComponent=!0}}]);