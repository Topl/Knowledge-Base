"use strict";(self.webpackChunkportal=self.webpackChunkportal||[]).push([[9114],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),c=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(r),f=n,m=u["".concat(s,".").concat(f)]||u[f]||d[f]||a;return r?o.createElement(m,i(i({ref:t},p),{},{components:r})):o.createElement(m,i({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}u.displayName="MDXCreateElement"},6188:(e,t,r)=>{r.d(t,{ZP:()=>i});var o=r(7462),n=(r(7294),r(3905));const a={toc:[]};function i(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},a,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"To broadcast a simple transaction run the following command:"),(0,n.kt)("pre",null,(0,n.kt)("code",null,"brambl-cli tx broadcast -i ",r.txFileProved," -h $HOST --port $PORT")),(0,n.kt)("p",null,"This will broadcast the transaction in the file ",(0,n.kt)("code",null,r.txFileProved)," to the network."))}i.isMDXComponent=!0},7258:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var o=r(7462),n=(r(7294),r(3905)),a=r(6188);const i={sidebar_position:6},l="Broadcast a Transaction",s={unversionedId:"Developers/CLI/How-tos/broadcast-tx",id:"Developers/CLI/How-tos/broadcast-tx",title:"Broadcast a Transaction",description:"Before broadcasting, this command will validate the transaction and the proof. If the validation fails, the command will fail and the transaction will not be broadcasted.",source:"@site/docs/Developers/04-CLI/03-How-tos/broadcast-tx.md",sourceDirName:"Developers/04-CLI/03-How-tos",slug:"/Developers/CLI/How-tos/broadcast-tx",permalink:"/Developers/CLI/How-tos/broadcast-tx",draft:!1,editUrl:"https://github.com/Topl/knowledge-base/edit/main/docs/Developers/04-CLI/03-How-tos/broadcast-tx.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"developersSidebar",previous:{title:"Prove a Transaction",permalink:"/Developers/CLI/How-tos/prove-simple-tx"},next:{title:"Query the Bifrost Node",permalink:"/Developers/CLI/How-tos/bifrost-query"}},c={},p=[],d={toc:p};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"broadcast-a-transaction"},"Broadcast a Transaction"),(0,n.kt)(a.ZP,{txFileProved:"$TX_PROVED_FILE",mdxType:"BroadcastTx"}),(0,n.kt)("p",null,"Before broadcasting, this command will validate the transaction and the proof. If the validation fails, the command will fail and the transaction will not be broadcasted."))}u.isMDXComponent=!0}}]);