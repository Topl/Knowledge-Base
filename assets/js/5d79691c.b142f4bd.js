"use strict";(self.webpackChunkportal=self.webpackChunkportal||[]).push([[9102],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>y});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=u(r),y=o,d=b["".concat(s,".").concat(y)]||b[y]||p[y]||a;return r?n.createElement(d,i(i({ref:t},c),{},{components:r})):n.createElement(d,i({ref:t},c))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=b;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},558:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:7},i="Query the Bifrost Node",l={unversionedId:"Developers/CLI/How-tos/bifrost-query",id:"Developers/CLI/How-tos/bifrost-query",title:"Query the Bifrost Node",description:"There are several ways to query the bifrost node. You can query blocks, transactions, utxos, etc.",source:"@site/docs/Developers/04-CLI/03-How-tos/bifrost-query.md",sourceDirName:"Developers/04-CLI/03-How-tos",slug:"/Developers/CLI/How-tos/bifrost-query",permalink:"/Developers/CLI/How-tos/bifrost-query",draft:!1,editUrl:"https://github.com/Topl/knowledge-base/edit/main/docs/Developers/04-CLI/03-How-tos/bifrost-query.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"developersSidebar",previous:{title:"Broadcast a Transaction",permalink:"/Developers/CLI/How-tos/broadcast-tx"},next:{title:"Query The Genus Node",permalink:"/Developers/CLI/How-tos/genus-query"}},s={},u=[{value:"Query a block by id",id:"query-a-block-by-id",level:2},{value:"Query a block by height",id:"query-a-block-by-height",level:2},{value:"Query a transaction by id",id:"query-a-transaction-by-id",level:2}],c={toc:u};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"query-the-bifrost-node"},"Query the Bifrost Node"),(0,o.kt)("p",null,"There are several ways to query the bifrost node. You can query blocks, transactions, utxos, etc."),(0,o.kt)("h2",{id:"query-a-block-by-id"},"Query a block by id"),(0,o.kt)("p",null,"To query a block by id run the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"brambl-cli bifrost-query block-by-id --block-id $BLOCK_ID -h $HOST --port $PORT\n")),(0,o.kt)("p",null,"This will query the block with id ",(0,o.kt)("inlineCode",{parentName:"p"},"$BLOCK_ID")," from the bifrost node running on ",(0,o.kt)("inlineCode",{parentName:"p"},"$HOST")," on port ",(0,o.kt)("inlineCode",{parentName:"p"},"$PORT"),"."),(0,o.kt)("h2",{id:"query-a-block-by-height"},"Query a block by height"),(0,o.kt)("p",null,"To query a block by height run the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"brambl-cli bifrost-query block-by-height --height $HEIGHT -h $HOST --port $PORT\n")),(0,o.kt)("p",null,"This will query the block with height ",(0,o.kt)("inlineCode",{parentName:"p"},"$HEIGHT")," from the bifrost node running on ",(0,o.kt)("inlineCode",{parentName:"p"},"$HOST")," on port ",(0,o.kt)("inlineCode",{parentName:"p"},"$PORT"),"."),(0,o.kt)("h2",{id:"query-a-transaction-by-id"},"Query a transaction by id"),(0,o.kt)("p",null,"To query a transaction by id run the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"brambl-cli bifrost-query transaction-by-id --transaction-id $TX_ID -h $HOST --port $PORT\n")),(0,o.kt)("p",null,"This will query the transaction with id ",(0,o.kt)("inlineCode",{parentName:"p"},"$TX_ID")," from the bifrost node running on ",(0,o.kt)("inlineCode",{parentName:"p"},"$HOST")," on port ",(0,o.kt)("inlineCode",{parentName:"p"},"$PORT"),"."))}p.isMDXComponent=!0}}]);