"use strict";(self.webpackChunkportal=self.webpackChunkportal||[]).push([[5553],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>b});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),d=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=d(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=d(n),b=a,f=u["".concat(i,".").concat(b)]||u[b]||p[b]||o;return n?r.createElement(f,s(s({ref:t},l),{},{components:n})):r.createElement(f,s({ref:t},l))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,s[1]=c;for(var d=2;d<o;d++)s[d]=n[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7106:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var r=n(7462),a=(n(7294),n(3905));const o={title:"Broadcast Transaction",slug:"broadcasttransaction",excerpt:"#### Summary\nBroadcast transaction\n\n#### Type\nRemote -- Route must be used in conjunction with an external key manager service.\n\n#### Description\nPlace specified signed transaction into the mempool and broadcast to other nodes\n\n#### Notes\n- Currently only enabled for `AssetCreation` and `AssetTransfer` transactions\n\n#### Params\n| Fields | Data type | Required / Optional | Description                                                                   |\n|--------|-----------|---------------------|-------------------------------------------------------------------------------|\n| tx     | object    | Required            | A full formatted transaction JSON object (prototype transaction + signatures) |",hidden:!1,createdAt:"2021-04-06T16:55:04.857Z",updatedAt:"2021-04-06T16:55:04.857Z"},s=void 0,c={unversionedId:"Developer/Broadcast Transaction/broadcast-transaction/broadcasttransaction",id:"Developer/Broadcast Transaction/broadcast-transaction/broadcasttransaction",title:"Broadcast Transaction",description:"",source:"@site/docs/Developer/Broadcast Transaction/broadcast-transaction/broadcasttransaction.md",sourceDirName:"Developer/Broadcast Transaction/broadcast-transaction",slug:"/Developer/Broadcast Transaction/broadcast-transaction/broadcasttransaction",permalink:"/Knowledge-Base/docs/Developer/Broadcast Transaction/broadcast-transaction/broadcasttransaction",draft:!1,editUrl:"https://github.com/Topl/knowledge-base/docs/Developer/Broadcast Transaction/broadcast-transaction/broadcasttransaction.md",tags:[],version:"current",frontMatter:{title:"Broadcast Transaction",slug:"broadcasttransaction",excerpt:"#### Summary\nBroadcast transaction\n\n#### Type\nRemote -- Route must be used in conjunction with an external key manager service.\n\n#### Description\nPlace specified signed transaction into the mempool and broadcast to other nodes\n\n#### Notes\n- Currently only enabled for `AssetCreation` and `AssetTransfer` transactions\n\n#### Params\n| Fields | Data type | Required / Optional | Description                                                                   |\n|--------|-----------|---------------------|-------------------------------------------------------------------------------|\n| tx     | object    | Required            | A full formatted transaction JSON object (prototype transaction + signatures) |",hidden:!1,createdAt:"2021-04-06T16:55:04.857Z",updatedAt:"2021-04-06T16:55:04.857Z"},sidebar:"developerSidebar",previous:{title:"User Settings",permalink:"/Knowledge-Base/docs/Developer/BaaS Portal Onboarding/user-settings"},next:{title:"Broadcast Transaction",permalink:"/Knowledge-Base/docs/Developer/Broadcast Transaction/broadcast-transaction"}},i={},d=[],l={toc:d};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}))}p.isMDXComponent=!0}}]);