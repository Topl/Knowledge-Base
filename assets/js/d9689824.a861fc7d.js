"use strict";(self.webpackChunkportal=self.webpackChunkportal||[]).push([[7389],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(n),h=r,m=p["".concat(s,".").concat(h)]||p[h]||d[h]||l;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},992:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>E,contentTitle:()=>O,default:()=>V,frontMatter:()=>S,metadata:()=>D,toc:()=>P});var a=n(7462),r=n(7294),l=n(3905),o=n(6010),i=n(2466),s=n(6550),u=n(1980),c=n(7392),d=n(12);function p(e){return function(e){var t;return(null==(t=r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:t.filter(Boolean))??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function h(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,u._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=h(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[s,u]=f({queryString:n,groupId:a}),[c,p]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,d.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),b=(()=>{const e=s??c;return m({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{b&&i(b)}),[b]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),p(e)}),[u,p,l]),tabValues:l}}var g=n(2389);const v="tabList__CuJ",y="tabItem_LNqP";function k(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==l&&(d(t),s(a))},h=e=>{var t;let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}null==(t=n)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:h,onClick:p},i,{className:(0,o.Z)("tabs__item",y,null==i?void 0:i.className,{"tabs__item--active":l===t})}),n??t)})))}function w(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function T(e){const t=b(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",v)},r.createElement(k,(0,a.Z)({},e,t)),r.createElement(w,(0,a.Z)({},e,t)))}function N(e){const t=(0,g.Z)();return r.createElement(T,(0,a.Z)({key:String(t)},e))}const j="tabItem_Ymn6";function x(e){let{children:t,hidden:n,className:a}=e;return r.createElement("div",{role:"tabpanel",className:(0,o.Z)(j,a),hidden:n},t)}const S={id:"install-bare-metal",title:"Bare Metal",slug:"install-bare-metal",tags:["Install","Getting started","sdkman","scala","jar"]},O=void 0,D={unversionedId:"Validators/Node Setup/install-bare-metal",id:"Validators/Node Setup/install-bare-metal",title:"Bare Metal",description:"Bifrost is the reference client implementation of the Topl protocol node, written in Scala.",source:"@site/docs/Validators/01-Node Setup/bare-metal.md",sourceDirName:"Validators/01-Node Setup",slug:"/Validators/Node Setup/install-bare-metal",permalink:"/Validators/Node Setup/install-bare-metal",draft:!1,editUrl:"https://github.com/Topl/knowledge-base/edit/main/docs/Validators/01-Node Setup/bare-metal.md",tags:[{label:"Install",permalink:"/tags/install"},{label:"Getting started",permalink:"/tags/getting-started"},{label:"sdkman",permalink:"/tags/sdkman"},{label:"scala",permalink:"/tags/scala"},{label:"jar",permalink:"/tags/jar"}],version:"current",frontMatter:{id:"install-bare-metal",title:"Bare Metal",slug:"install-bare-metal",tags:["Install","Getting started","sdkman","scala","jar"]},sidebar:"validatorSidebar",next:{title:"Run with Docker",permalink:"/Validators/Node Setup/install-docker"}},E={},P=[{value:"Linux",id:"linux",level:2},{value:"Installing Dependencies",id:"installing-dependencies",level:3},{value:"Installing Java",id:"installing-java",level:3},{value:"Download and Run Jar",id:"download-and-run-jar",level:3},{value:"Windows",id:"windows",level:2}],I={toc:P};function V(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},I,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("admonition",{title:"Definitions to know",type:"info"},(0,l.kt)(N,{mdxType:"Tabs"},(0,l.kt)(x,{value:"Bifrost",label:"Bifrost",mdxType:"TabItem"},"Bifrost is the reference client implementation of the Topl protocol node, written in Scala."),(0,l.kt)(x,{value:"Genus",label:"Genus",mdxType:"TabItem"},"A service that provides a data layer between the Topl Blockchain and wallets, block explorers, or other dApps that require easy and well structured access to chain data."))),(0,l.kt)("h2",{id:"linux"},"Linux"),(0,l.kt)("p",null,"While Topl's Bifrost node can be run across any distribution or flavor of Linux the below instructions have been tested for any distros using apt as a package manager such as ",(0,l.kt)("strong",{parentName:"p"},"Ubuntu")," or any ",(0,l.kt)("strong",{parentName:"p"},"Debian-based")," distro."),(0,l.kt)("h3",{id:"installing-dependencies"},"Installing Dependencies"),(0,l.kt)("p",null,"Before getting started there are a few dependencies needed--",(0,l.kt)("inlineCode",{parentName:"p"},"curl"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"zip"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"unzip"),"."),(0,l.kt)("p",null,"If you don't have these dependencies already you can install them through:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"sudo apt install curl zip unzip\n")),(0,l.kt)("h3",{id:"installing-java"},"Installing Java"),(0,l.kt)("p",null,"Detailed instructions for installing Java onto your device can be found directly from the main Java ",(0,l.kt)("a",{parentName:"p",href:"https://www.java.com/en/download/help/linux_install.html"},"site"),"."),(0,l.kt)("p",null,"However, we recommend installing the package ",(0,l.kt)("a",{parentName:"p",href:"https://sdkman.io/"},"SDKMan")," to simplyify both the installation of your Java environment as well as any updates for the future."),(0,l.kt)("p",null,"You can install SDKMan and Java by using the below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'curl -s "https://get.sdkman.io" | bash\nsource "$HOME/.sdkman/bin/sdkman-init.sh"\nsdk install java\n')),(0,l.kt)("h3",{id:"download-and-run-jar"},"Download and Run Jar"),(0,l.kt)("p",null,"Once you've installed Java, find the latest version of the Bifrost node via our Github, ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/Topl/Project-Bifrost/releases/latest"},"https://github.com/Topl/Project-Bifrost/releases/latest")," "),(0,l.kt)("p",null,"You can then download the latest version with ",(0,l.kt)("inlineCode",{parentName:"p"},"wget"),", simply switching out the URL to that of your desired release."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"wget https://github.com/Topl/Bifrost/releases/download/vX.X.X-alpha6/bifrost-node-2.0.0-alpha6.jar \n")),(0,l.kt)("p",null,"With the Jar downloaded, the node can be launched with a single line."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"java -jar bifrost-node-2.0.0-alpha2.jar\n")),(0,l.kt)("p",null,"At this point you should see your node live in the terminal. To see additional options, use --help."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'--config <str>              Zero or more config files (.conf, .json, .yaml) to apply to the node.\n                            Config files stack such that the last config file takes precedence. To\n                            specify an internal resource, prefix the value with "resource://".\n--dataDir <str>             The directory to use when saving/reading blockchain data\n--debug                     An optional flag to enable debug mode on this node.\n--disableGenus              Disables the Genus server and Genus gRPC services\n--knownPeers <str>          A comma-delimited list of host:port values to connect to at launch\n                            (i.e. 1.2.3.4:9084,5.6.7.8:9084)\n--logbackFile <str>         An optional path to a logback.xml file to override the logging\n                            configuration of the node.\n--orientDbDir <str>         The directory to use when saving/reading graph data\n--orientDbPassword <str>    The password to use when connecting to OrientDB\n--p2pBindHost <str>         The hostname to bind to for the P2P layer (i.e. localhost or 0.0.0.0)\n--p2pBindPort <int>         The port to bind to for the P2P layer (i.e. 9084)\n--rpcBindHost <str>         The hostname to bind to for the RPC layer (i.e. localhost or 0.0.0.0)\n--rpcBindPort <int>         The port to bind to for the RPC layer (i.e. 9085)\n--stakingDir <str>          The directory of the block producer\'s staking keys\n--testnetStakerCount <int>  The number of stakers to initialize.\n--testnetStakerIndex <int>  The index of the staker to launch.\n--testnetTimestamp <long>   A UTC Unix epoch timestamp (ms) to use when seeding a private testnet.\n')),(0,l.kt)("h2",{id:"windows"},"Windows"),(0,l.kt)("p",null,"While Topl's node cannot yet be run natively on Windows devices. Bifrost can be installed and run using the Windows Subsystem for Linux (WSL)."),(0,l.kt)("p",null,"Detailed instructions for installing and configuring WSL ",(0,l.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/wsl/install"},"here"),"."),(0,l.kt)("p",null,"Once you have completed setting up your WSL environment, you can simply follow the instructions for Linux above inside your Linux subsystem."))}V.isMDXComponent=!0}}]);