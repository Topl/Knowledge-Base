"use strict";(self.webpackChunkportal=self.webpackChunkportal||[]).push([[9265],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),a=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=a(e.components);return n.createElement(i.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=a(r),d=o,h=u["".concat(i,".").concat(d)]||u[d]||f[d]||s;return r?n.createElement(h,l(l({ref:t},c),{},{components:r})):n.createElement(h,l({ref:t},c))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,l=new Array(s);l[0]=u;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:o,l[1]=p;for(var a=2;a<s;a++)l[a]=r[a];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},3863:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>f,frontMatter:()=>s,metadata:()=>p,toc:()=>a});var n=r(7462),o=(r(7294),r(3905));const s={sidebar_position:1},l="Fellowships",p={unversionedId:"Developers/CLI/concepts/fellowships",id:"Developers/CLI/concepts/fellowships",title:"Fellowships",description:"A fellowship is a group of people who have agreed to participate lock funds",source:"@site/docs/Developers/04-CLI/02-concepts/fellowships.md",sourceDirName:"Developers/04-CLI/02-concepts",slug:"/Developers/CLI/concepts/fellowships",permalink:"/Developers/CLI/concepts/fellowships",draft:!1,editUrl:"https://github.com/Topl/knowledge-base/edit/main/docs/Developers/04-CLI/02-concepts/fellowships.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"developersSidebar",previous:{title:"Concepts",permalink:"/category/concepts"},next:{title:"Locks",permalink:"/Developers/CLI/concepts/locks"}},i={},a=[],c={toc:a};function f(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"fellowships"},"Fellowships"),(0,o.kt)("p",null,"A fellowship is a group of people who have agreed to participate lock funds\ntogether according to a lock template. The lock template defines the terms\nof the agreement. "),(0,o.kt)("p",null,"For example, if Alice and Bob agree to lock funds together and that to unlock\nthe funds they need to provide a signature from both of them, then they have\ncreated a fellowship. The lock template in this case is the Quivr expression\n",(0,o.kt)("inlineCode",{parentName:"p"},"and(sign(0), sign(1))"),". However, the lock template is not part of the\nfellowship, it is just the terms of the agreement. Indeed, the same fellowship\ncan enter into other agreements expressed by other templates."))}f.isMDXComponent=!0}}]);