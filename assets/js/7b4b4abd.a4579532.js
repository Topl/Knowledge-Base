"use strict";(self.webpackChunkportal=self.webpackChunkportal||[]).push([[1060],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),i=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=i(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=i(n),b=o,f=u["".concat(s,".").concat(b)]||u[b]||d[b]||a;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,l[1]=c;for(var i=2;i<a;i++)l[i]=n[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1570:(e,t,n)=>{n.d(t,{ZP:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={toc:[]};function l(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},a,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"You can check the balance of an address using the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",null,"brambl-cli wallet balance --from-fellowship ",n.fellowship," --from-template ",n.template," --walletdb ",n.wallet," --host $HOST --port $PORT")),(0,o.kt)("p",null,"This will show you the balance of the address ",(0,o.kt)("code",null,n.fellowship)," and ",(0,o.kt)("code",null,n.template)," in the wallet ",(0,o.kt)("code",null,n.wallet)," in the node ",(0,o.kt)("code",null,"$HOST:$PORT"),". The ",(0,o.kt)("code",null,"--from-interaction")," can optionally be used to choose the interaction."))}l.isMDXComponent=!0},7679:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var r=n(7462),o=(n(7294),n(3905)),a=n(1570);const l={sidebar_position:17},c="Check balance of an address",s={unversionedId:"Developers/CLI/How-tos/check-balance",id:"Developers/CLI/How-tos/check-balance",title:"Check balance of an address",description:"The output will look something like this:",source:"@site/docs/Developers/04-CLI/03-How-tos/check-balance.md",sourceDirName:"Developers/04-CLI/03-How-tos",slug:"/Developers/CLI/How-tos/check-balance",permalink:"/Developers/CLI/How-tos/check-balance",draft:!1,editUrl:"https://github.com/Topl/knowledge-base/edit/main/docs/Developers/04-CLI/03-How-tos/check-balance.md",tags:[],version:"current",sidebarPosition:17,frontMatter:{sidebar_position:17},sidebar:"developersSidebar",previous:{title:"Inspecting a Transaction",permalink:"/Developers/CLI/How-tos/inspect-tx"},next:{title:"Reset an Interaction",permalink:"/Developers/CLI/How-tos/reset-interaction"}},i={},p=[],d={toc:p};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"check-balance-of-an-address"},"Check balance of an address"),(0,o.kt)(a.ZP,{fellowship:"$FELLOWSHIP",template:"$LOCK_TEMPLATE",wallet:"$WALLET",mdxType:"CheckBalance"}),(0,o.kt)("p",null,"The output will look something like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Asset(0a205542a9a464ba60a155c28d55e9d084ce0b75eb8bd3a2ed5a27ee548e25f86616, \n0a2045d4601f88b8b51c91e45d5b88db2fb12d2e2beeb7d2a4160b424c633e5ae8e8): 1000\nSeries(0a2045d4601f88b8b51c91e45d5b88db2fb12d2e2beeb7d2a4160b424c633e5ae8e8): 1\nGroup(0a205542a9a464ba60a155c28d55e9d084ce0b75eb8bd3a2ed5a27ee548e25f86616): 1\n")),(0,o.kt)("p",null,"This also supports the ",(0,o.kt)("inlineCode",{parentName:"p"},"--from address")," parameter to check the balance of any address. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"brambl-cli wallet balance --from-address $ADDRESS --walletdb $WALLET --host $HOST --port $PORT\n")))}u.isMDXComponent=!0}}]);