"use strict";(self.webpackChunkportal=self.webpackChunkportal||[]).push([[8131],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>p});var n=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var c=n.createContext({}),d=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=d(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,a=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),f=d(r),p=s,m=f["".concat(c,".").concat(p)]||f[p]||u[p]||a;return r?n.createElement(m,i(i({ref:t},l),{},{components:r})):n.createElement(m,i({ref:t},l))}));function p(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=r.length,i=new Array(a);i[0]=f;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:s,i[1]=o;for(var d=2;d<a;d++)i[d]=r[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3084:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var n=r(7462),s=(r(7294),r(3905));const a={title:"Create raw asset transfer",slug:"createrawassettransfer",excerpt:'#### Summary\nTransfer Assets from an account to a specified recipient\n\n#### Type\nRemote -- Transaction must be used in conjunction with an external key manager service.\n\n#### Description\nDefault behavior of the wallet is to find the first unlocked address which hold the targetted Asset.\nThe protocols default behavior is to combine multiple UTXOs of the same type into a single UTXO when it can.\n\n#### Notes\n- `AssetCode` in `AssetValue` can be generated using `util_generateAssetCode`\n- `fee` and `quantity` in `AssetValue` need to be strings, they will be converted into Int128 which can go up \nto 178 undecillion(2^127-1)\n\n#### Params\n| Fields               | Data type              | Required / Optional | Description                                                                       |\n|----------------------|------------------------|---------------------|-----------------------------------------------------------------------------------|\n| propositionType      | String                 | Required            | Type of proposition, eg., PublicKeyCurve25519, ThresholdCurve25519                |\n| recipients           | [[String, AssetValue]] | Required            | Array of addresses and assetValues for the transfer recipients(check table below) |\n| sender               | [String]               | Required            | Array of addresses from which Assets should be sent                               |\n| changeAddress        | String                 | Required            | Address for recipient of unspent Polys                                            |\n| consolidationAddress | String                 | Optional            | Address for recipient of unspent Assets                                           |\n| fee                  | String                 | Required            | Fee for the transfer. Minting AssetTransfer requires fee to be greater than 0     |\n| minting              | Boolean                | Required            | If this is a minting AssetTransfer or not                                         |\n| data                 | String                 | Optional            | Data string which can be associated with this transaction(may be empty). Data has a maximum value of 127 characters.           |\n\n###### AssetValue\n| Fields       | Data type | Required / Optional | Description                                                                                     |\n|--------------|-----------|---------------------|-------------------------------------------------------------------------------------------------|\n| type         | String    | Required            | Type of transfer, should be "Asset" for AssetTransfer                                           |\n| quantity     | String    | Required            | Number of tokens in String                                                                      |\n| assetCode    | String    | Required            | Unique identifier for user issued Assets, generated from version, issuer address, and shortName |\n| securityRoot | String    | Optional            | Optional 32 byte commitment to instance of the AssetBox                                         |\n| metadata     | String    | Optional            | Metadata has a maximum value of 127 characters                                               |',hidden:!1,createdAt:"2021-04-06T16:50:34.984Z",updatedAt:"2021-07-09T20:54:07.470Z"},i=void 0,o={unversionedId:"v1.10.2/Raw Asset Transfer/raw-asset-transfer/createrawassettransfer",id:"v1.10.2/Raw Asset Transfer/raw-asset-transfer/createrawassettransfer",title:"Create raw asset transfer",description:"",source:"@site/docs/v1.10.2/Raw Asset Transfer/raw-asset-transfer/createrawassettransfer.md",sourceDirName:"v1.10.2/Raw Asset Transfer/raw-asset-transfer",slug:"/v1.10.2/Raw Asset Transfer/raw-asset-transfer/createrawassettransfer",permalink:"/Developer-Portal/docs/v1.10.2/Raw Asset Transfer/raw-asset-transfer/createrawassettransfer",draft:!1,editUrl:"https://github.com/Topl/Developer-Portal/docs/v1.10.2/Raw Asset Transfer/raw-asset-transfer/createrawassettransfer.md",tags:[],version:"current",frontMatter:{title:"Create raw asset transfer",slug:"createrawassettransfer",excerpt:'#### Summary\nTransfer Assets from an account to a specified recipient\n\n#### Type\nRemote -- Transaction must be used in conjunction with an external key manager service.\n\n#### Description\nDefault behavior of the wallet is to find the first unlocked address which hold the targetted Asset.\nThe protocols default behavior is to combine multiple UTXOs of the same type into a single UTXO when it can.\n\n#### Notes\n- `AssetCode` in `AssetValue` can be generated using `util_generateAssetCode`\n- `fee` and `quantity` in `AssetValue` need to be strings, they will be converted into Int128 which can go up \nto 178 undecillion(2^127-1)\n\n#### Params\n| Fields               | Data type              | Required / Optional | Description                                                                       |\n|----------------------|------------------------|---------------------|-----------------------------------------------------------------------------------|\n| propositionType      | String                 | Required            | Type of proposition, eg., PublicKeyCurve25519, ThresholdCurve25519                |\n| recipients           | [[String, AssetValue]] | Required            | Array of addresses and assetValues for the transfer recipients(check table below) |\n| sender               | [String]               | Required            | Array of addresses from which Assets should be sent                               |\n| changeAddress        | String                 | Required            | Address for recipient of unspent Polys                                            |\n| consolidationAddress | String                 | Optional            | Address for recipient of unspent Assets                                           |\n| fee                  | String                 | Required            | Fee for the transfer. Minting AssetTransfer requires fee to be greater than 0     |\n| minting              | Boolean                | Required            | If this is a minting AssetTransfer or not                                         |\n| data                 | String                 | Optional            | Data string which can be associated with this transaction(may be empty). Data has a maximum value of 127 characters.           |\n\n###### AssetValue\n| Fields       | Data type | Required / Optional | Description                                                                                     |\n|--------------|-----------|---------------------|-------------------------------------------------------------------------------------------------|\n| type         | String    | Required            | Type of transfer, should be "Asset" for AssetTransfer                                           |\n| quantity     | String    | Required            | Number of tokens in String                                                                      |\n| assetCode    | String    | Required            | Unique identifier for user issued Assets, generated from version, issuer address, and shortName |\n| securityRoot | String    | Optional            | Optional 32 byte commitment to instance of the AssetBox                                         |\n| metadata     | String    | Optional            | Metadata has a maximum value of 127 characters                                               |',hidden:!1,createdAt:"2021-04-06T16:50:34.984Z",updatedAt:"2021-07-09T20:54:07.470Z"},sidebar:"tutorialSidebar",previous:{title:"What are Polys?",permalink:"/Developer-Portal/docs/v1.10.2/New To Topl/what-are-polys"},next:{title:"Raw Asset Transfer",permalink:"/Developer-Portal/docs/v1.10.2/Raw Asset Transfer/raw-asset-transfer"}},c={},d=[],l={toc:d};function u(e){let{components:t,...r}=e;return(0,s.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}))}u.isMDXComponent=!0}}]);